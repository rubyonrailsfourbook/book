## Agile DevelopmentThis section will cover what agile development is and how this book will use it. This should not thought of a end all be all guide to agile this is just my take on it.### StoriesStories tell what needs to been done. The explain who, what, and why. The stories should broken into small chunks. Each story should only take between  zero and four hours, ideally. However eight hour is ok. However anything over a working day should split into smaller parts.*Bad Example*As user a want a to charged to my uses**Problems**The  story above is too broad, the story has a lot complexity that isn't told and doesn't include a why which should be included.*Good Examples*- As a user I want to able to fill out a form to store credit card info so that I be charged for the site- As user I want to be able to upgraded and downgrade my plan so that I get a better plan- As a user I want to able to cancel my account so that I stop my service I disk the service**Good Points**All the stories have a who, what and why. All stories are small chucks, manageable, and don't have all lot hidden complexity. #### Not StartedThese are stories that need to be done.#### StartedWork is actively being done that story. The developer is working on the story.#### FinishedThis is even the development on the story is done. The story is awaiting deploy to the staging area. The staging is an important part of the Agile process. This is a place were the stakeholders can look over the new features and bugs fixes to make they work right and do what the story tasked.#### DeliveredThe story has been deployed to staging. Once the stakeholder looks over the story the stakeholder will either Accept the story and story will then be pushed to production or it will be reject and it start back "Not Start"### Continuous DeploymentThe Process of deploy often. Normally several times a day.### Test Driven DevelopmentTest Driven Development, TDD, is method of software development that involves writing tests first then writing the test code.The TDD process is as follows:Red -> Green -> Red -> Green### Continuous IntegrationA server to run your tests. This book will use [Travis CI](https://travis-ci.org)  for Continuous Integration testing since this project is open source. However there a several for closed source projects as well.